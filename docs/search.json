[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Projet R",
    "section": "",
    "text": "Nous vous presentons notre projet dans le cadre du cours “Remediation en R” du master IREF-ERDS. L’objectif de ce projet et de comprendre le lien entre la performance d’innovation des entreprises (mesurée par les dépots de brevets) et leur demande de compétences. Nous avons donc réalisé une partie statistique descriptive et une partie analyse pour tenter de répondre à cette problématique. Nous vous laissons les consulter via les onglets du site."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html#sidebar",
    "href": "index.html#sidebar",
    "title": "R project",
    "section": "Sidebar",
    "text": "Sidebar\n\nSidebar Title\nSidebar content"
  },
  {
    "objectID": "index.html#sidebar-title",
    "href": "index.html#sidebar-title",
    "title": "R project",
    "section": "Sidebar Title",
    "text": "Sidebar Title\nSidebar content"
  },
  {
    "objectID": "membre.html",
    "href": "membre.html",
    "title": "Membre du groupe",
    "section": "",
    "text": "##First Name Last name\n##First Name Last name\n##First Name Last name\n##First Name Last name",
    "crumbs": [
      "Acceuil",
      "Membres du groupe"
    ]
  },
  {
    "objectID": "statistique.html",
    "href": "statistique.html",
    "title": "statistiques",
    "section": "",
    "text": "#install.packages('dplyr')\nlibrary(dplyr)\n\n\nmerge_data = read.csv(\"base_emp_inno.csv\")\ndata_brevet = read.csv(\"base_brevets.csv\")\ndata_emp = read.csv(\"base_emp.csv\")\n\nstats_n_patents &lt;- data_brevet %&gt;%\n  summarize(\n    min = min(n_patents, na.rm = TRUE),\n    median = median(n_patents, na.rm = TRUE),\n    max = max(n_patents, na.rm = TRUE),\n    mean = mean(n_patents, na.rm = TRUE),\n    sd = sd(n_patents, na.rm = TRUE),\n    missing = sum(is.na(n_patents))\n  )\n#On renomme les lignes\nstats_n_patents &lt;- stats_n_patents %&gt;%\n  rename(\n    Minimum = min,\n    Médiane = median,\n    Maximum = max,\n    Moyenne = mean,\n    Ecart_Type = sd,\n    Manquants = missing\n  )\n\n#Ajouter une ligne nommée\nstats_n_patents &lt;- stats_n_patents %&gt;%\n  mutate(stat_name = \"n patents\") %&gt;%\n  relocate(stat_name)  # Déplacer la colonne 'stat_name' en premier\n\n\nStatistiques pour n_patents\n\n\nstat_name\nMinimum\nMédiane\nMaximum\nMoyenne\nEcart_Type\nManquants\n\n\n\n\nn patents\n1\n4\n20126\n28.18188\n302.4068\n0\n\n\n\n\n\n\n\ntop_firm = data_brevet %&gt;%\n  group_by(firm_name) %&gt;%\n  summarize(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  slice_head(n = 5)\n\nkable(top_firm, caption = \"Top 5 des entreprises par nombre de brevets\", format=\"markdown\")\n\n\nTop 5 des entreprises par nombre de brevets\n\n\n\n\n\n\nfirm_name\ntotal_patents\n\n\n\n\nCOMMISSARIAT A L’ENERGIE ATOMIQUE ET AUX ENERGIES ALTERNATIVES\n20126\n\n\nALCATEL LUCENT\n10807\n\n\nCENTRE NATIONAL DE LA RECHERCHE SCIENTIFIQUE\n9633\n\n\nTHOMSON LICENSING\n9194\n\n\nL’OREAL\n9094\n\n\n\n\n\n\n\n\n\ntop_ipc_main_desc = data_brevet %&gt;%\n  filter(!is.na(ipc_main_desc)) %&gt;%  # Exclure les NA dans ipc_main_desc\n  group_by(ipc_main_desc) %&gt;%\n  summarize(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  slice_head(n = 5)\n\nkable(top_ipc_main_desc, caption = \"Top 5 ipc_main_desc par nombre de brevets\", format=\"markdown\")\n\n\nTop 5 ipc_main_desc par nombre de brevets\n\n\n\n\n\n\nipc_main_desc\ntotal_patents\n\n\n\n\nNucleic acids or oligonucleotides having modified bases, i.e. other than adenine, guanine, cytosine, uracil or thymine\n75837\n\n\nSEMICONDUCTOR DEVICES; ELECTRIC SOLID STATE DEVICES NOT OTHERWISE PROVIDED FOR (use of semiconductor devices for measuring G01; resistors in general H01C; magnets, inductors, transformers H01F; capacitors in general H01G; electrolytic devices H01G0009000000; batteries, accumulators H01M; waveguides, resonators, or lines of the waveguide type H01P; line connectors, current collectors H01R; stimulated-emission devices H01S; electromechanical resonators H03H; loudspeakers, microphones, gramophone pick-ups or like acoustic electromechanical transducers H04R; electric light sources in general H05B; printed circuits, hybrid circuits, casings or constructional details of electrical apparatus, manufacture of assemblages of electrical components H05K; use of semiconductor devices in circuits having a particular application, see the subclass for the application);\n23888\n\n\nPICTORIAL COMMUNICATION, e.g. TELEVISION\n13297\n\n\nACYCLIC OR CARBOCYCLIC COMPOUNDS (macromolecular compounds C08; production of organic compounds by electrolysis or electrophoresis C25B0003000000, C25B0007000000)\n9231\n\n\nVEHICLE TYRES (manufacture, repairing B29); TYRE INFLATION; TYRE CHANGING; CONNECTING VALVES TO INFLATABLE ELASTIC BODIES IN GENERAL; DEVICES OR ARRANGEMENTS RELATED TO TYRES (testing of tyres G01M0017020000)\n7860\n\n\n\n\n\n\n\n\n\ntop_city = data_brevet %&gt;%\n  group_by(addr_city_main) %&gt;%\n  summarize(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  slice_head(n = 5)\n\nkable(top_city, caption = \"Top 5 des villes par nombre de brevets\", format=\"markdown\")\n\n\nTop 5 des villes par nombre de brevets\n\n\naddr_city_main\ntotal_patents\n\n\n\n\nParis\n113725\n\n\nBoulogne Billancourt\n20284\n\n\nCourbevoie\n16623\n\n\nIssy les Moulineaux\n10852\n\n\nRueil Malmaison\n9782\n\n\n\n\n\n\n\n\n\ntop_addr_dept = data_brevet %&gt;%\n  group_by(addr_dept_main) %&gt;%\n  summarize(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  slice_head(n = 5)\n\nkable(top_addr_dept, caption = \"Top 5 des départements par nombre de brevets\", format=\"markdown\")\n\n\nTop 5 des départements par nombre de brevets\n\n\naddr_dept_main\ntotal_patents\n\n\n\n\nFR101\n112606\n\n\nFR105\n80942\n\n\nFR103\n18569\n\n\nFR716\n13962\n\n\nFR724\n9641"
  },
  {
    "objectID": "statistique.html#statistique-pour-la-base-brevet",
    "href": "statistique.html#statistique-pour-la-base-brevet",
    "title": "statistique",
    "section": "",
    "text": "#install.packages('dplyr')\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nmerge_data = read.csv(\"base_emp_inno.csv\")\ndata_brevet = read.csv(\"base_brevets.csv\")\ndata_emp = read.csv(\"base_emp.csv\")\n\nstats_n_patents &lt;- data_brevet %&gt;%\n  summarize(\n    min = min(n_patents, na.rm = TRUE),\n    median = median(n_patents, na.rm = TRUE),\n    max = max(n_patents, na.rm = TRUE),\n    mean = mean(n_patents, na.rm = TRUE),\n    sd = sd(n_patents, na.rm = TRUE),\n    missing = sum(is.na(n_patents))\n  )\n#On renomme les lignes\nstats_n_patents &lt;- stats_n_patents %&gt;%\n  rename(\n    Minimum = min,\n    Médiane = median,\n    Maximum = max,\n    Moyenne = mean,\n    Ecart_Type = sd,\n    Manquants = missing\n  )\n\n#Ajouter une ligne nommée\nstats_n_patents &lt;- stats_n_patents %&gt;%\n  mutate(stat_name = \"n patents\") %&gt;%\n  relocate(stat_name)  # Déplacer la colonne 'stat_name' en premier\n\n\nStatistiques pour n_patents\n\n\nstat_name\nMinimum\nMédiane\nMaximum\nMoyenne\nEcart_Type\nManquants\n\n\n\n\nn patents\n1\n4\n20126\n28.18188\n302.4068\n0"
  },
  {
    "objectID": "statistique.html#top-5-firm_name-par-nombre-de-brevets",
    "href": "statistique.html#top-5-firm_name-par-nombre-de-brevets",
    "title": "statistiques",
    "section": "Top 5 firm_name par nombre de brevets",
    "text": "Top 5 firm_name par nombre de brevets\n\ntop_firm = data_brevet %&gt;%\n  group_by(firm_name) %&gt;%\n  summarize(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  slice_head(n = 5)\n\nkable(top_firm, caption = \"Top 5 firm_name par nombre de brevets\", format=\"markdown\")\n\n\nTop 5 firm_name par nombre de brevets\n\n\n\n\n\n\nfirm_name\ntotal_patents\n\n\n\n\nCOMMISSARIAT A L’ENERGIE ATOMIQUE ET AUX ENERGIES ALTERNATIVES\n20126\n\n\nALCATEL LUCENT\n10807\n\n\nCENTRE NATIONAL DE LA RECHERCHE SCIENTIFIQUE\n9633\n\n\nTHOMSON LICENSING\n9194\n\n\nL’OREAL\n9094"
  },
  {
    "objectID": "statistique.html#top-5-ipc_main_desc-par-nombre-de-brevets",
    "href": "statistique.html#top-5-ipc_main_desc-par-nombre-de-brevets",
    "title": "statistiques",
    "section": "Top 5 ipc_main_desc par nombre de brevets",
    "text": "Top 5 ipc_main_desc par nombre de brevets\n\ntop_ipc_main_desc = data_brevet %&gt;%\n  filter(!is.na(ipc_main_desc)) %&gt;%  # Exclure les NA dans ipc_main_desc\n  group_by(ipc_main_desc) %&gt;%\n  summarize(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  slice_head(n = 5)\n\nkable(top_ipc_main_desc, caption = \"Top 5 ipc_main_desc par nombre de brevets\", format=\"markdown\")\n\n\nTop 5 ipc_main_desc par nombre de brevets\n\n\n\n\n\n\nipc_main_desc\ntotal_patents\n\n\n\n\nNucleic acids or oligonucleotides having modified bases, i.e. other than adenine, guanine, cytosine, uracil or thymine\n75837\n\n\nSEMICONDUCTOR DEVICES; ELECTRIC SOLID STATE DEVICES NOT OTHERWISE PROVIDED FOR (use of semiconductor devices for measuring G01; resistors in general H01C; magnets, inductors, transformers H01F; capacitors in general H01G; electrolytic devices H01G0009000000; batteries, accumulators H01M; waveguides, resonators, or lines of the waveguide type H01P; line connectors, current collectors H01R; stimulated-emission devices H01S; electromechanical resonators H03H; loudspeakers, microphones, gramophone pick-ups or like acoustic electromechanical transducers H04R; electric light sources in general H05B; printed circuits, hybrid circuits, casings or constructional details of electrical apparatus, manufacture of assemblages of electrical components H05K; use of semiconductor devices in circuits having a particular application, see the subclass for the application);\n23888\n\n\nPICTORIAL COMMUNICATION, e.g. TELEVISION\n13297\n\n\nACYCLIC OR CARBOCYCLIC COMPOUNDS (macromolecular compounds C08; production of organic compounds by electrolysis or electrophoresis C25B0003000000, C25B0007000000)\n9231\n\n\nVEHICLE TYRES (manufacture, repairing B29); TYRE INFLATION; TYRE CHANGING; CONNECTING VALVES TO INFLATABLE ELASTIC BODIES IN GENERAL; DEVICES OR ARRANGEMENTS RELATED TO TYRES (testing of tyres G01M0017020000)\n7860\n\n\n\n\n\n\ntop_city = data_brevet %&gt;%\n  group_by(addr_city_main) %&gt;%\n  summarize(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  slice_head(n = 5)\n\nkable(top_city, caption = \"Top 5 addr_city_main par nombre de brevets\", format=\"markdown\")\n\n\nTop 5 addr_city_main par nombre de brevets\n\n\naddr_city_main\ntotal_patents\n\n\n\n\nParis\n113725\n\n\nBoulogne Billancourt\n20284\n\n\nCourbevoie\n16623\n\n\nIssy les Moulineaux\n10852\n\n\nRueil Malmaison\n9782\n\n\n\n\n\n\ntop_addr_dept = data_brevet %&gt;%\n  group_by(addr_dept_main) %&gt;%\n  summarize(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  slice_head(n = 5)\n\nkable(top_addr_dept, caption = \"Top 5 addr_dept_main par nombre de brevets\", format=\"markdown\")\n\n\nTop 5 addr_dept_main par nombre de brevets\n\n\naddr_dept_main\ntotal_patents\n\n\n\n\nFR101\n112606\n\n\nFR105\n80942\n\n\nFR103\n18569\n\n\nFR716\n13962\n\n\nFR724\n9641"
  },
  {
    "objectID": "statistique.html#statistiques-pour-la-base-brevet",
    "href": "statistique.html#statistiques-pour-la-base-brevet",
    "title": "statistiques",
    "section": "",
    "text": "#install.packages('dplyr')\nlibrary(dplyr)\n\n\nmerge_data = read.csv(\"base_emp_inno.csv\")\ndata_brevet = read.csv(\"base_brevets.csv\")\ndata_emp = read.csv(\"base_emp.csv\")\n\nstats_n_patents &lt;- data_brevet %&gt;%\n  summarize(\n    min = min(n_patents, na.rm = TRUE),\n    median = median(n_patents, na.rm = TRUE),\n    max = max(n_patents, na.rm = TRUE),\n    mean = mean(n_patents, na.rm = TRUE),\n    sd = sd(n_patents, na.rm = TRUE),\n    missing = sum(is.na(n_patents))\n  )\n#On renomme les lignes\nstats_n_patents &lt;- stats_n_patents %&gt;%\n  rename(\n    Minimum = min,\n    Médiane = median,\n    Maximum = max,\n    Moyenne = mean,\n    Ecart_Type = sd,\n    Manquants = missing\n  )\n\n#Ajouter une ligne nommée\nstats_n_patents &lt;- stats_n_patents %&gt;%\n  mutate(stat_name = \"n patents\") %&gt;%\n  relocate(stat_name)  # Déplacer la colonne 'stat_name' en premier\n\n\nStatistiques pour n_patents\n\n\nstat_name\nMinimum\nMédiane\nMaximum\nMoyenne\nEcart_Type\nManquants\n\n\n\n\nn patents\n1\n4\n20126\n28.18188\n302.4068\n0\n\n\n\n\n\n\n\ntop_firm = data_brevet %&gt;%\n  group_by(firm_name) %&gt;%\n  summarize(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  slice_head(n = 5)\n\nkable(top_firm, caption = \"Top 5 des entreprises par nombre de brevets\", format=\"markdown\")\n\n\nTop 5 des entreprises par nombre de brevets\n\n\n\n\n\n\nfirm_name\ntotal_patents\n\n\n\n\nCOMMISSARIAT A L’ENERGIE ATOMIQUE ET AUX ENERGIES ALTERNATIVES\n20126\n\n\nALCATEL LUCENT\n10807\n\n\nCENTRE NATIONAL DE LA RECHERCHE SCIENTIFIQUE\n9633\n\n\nTHOMSON LICENSING\n9194\n\n\nL’OREAL\n9094\n\n\n\n\n\n\n\n\n\ntop_ipc_main_desc = data_brevet %&gt;%\n  filter(!is.na(ipc_main_desc)) %&gt;%  # Exclure les NA dans ipc_main_desc\n  group_by(ipc_main_desc) %&gt;%\n  summarize(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  slice_head(n = 5)\n\nkable(top_ipc_main_desc, caption = \"Top 5 ipc_main_desc par nombre de brevets\", format=\"markdown\")\n\n\nTop 5 ipc_main_desc par nombre de brevets\n\n\n\n\n\n\nipc_main_desc\ntotal_patents\n\n\n\n\nNucleic acids or oligonucleotides having modified bases, i.e. other than adenine, guanine, cytosine, uracil or thymine\n75837\n\n\nSEMICONDUCTOR DEVICES; ELECTRIC SOLID STATE DEVICES NOT OTHERWISE PROVIDED FOR (use of semiconductor devices for measuring G01; resistors in general H01C; magnets, inductors, transformers H01F; capacitors in general H01G; electrolytic devices H01G0009000000; batteries, accumulators H01M; waveguides, resonators, or lines of the waveguide type H01P; line connectors, current collectors H01R; stimulated-emission devices H01S; electromechanical resonators H03H; loudspeakers, microphones, gramophone pick-ups or like acoustic electromechanical transducers H04R; electric light sources in general H05B; printed circuits, hybrid circuits, casings or constructional details of electrical apparatus, manufacture of assemblages of electrical components H05K; use of semiconductor devices in circuits having a particular application, see the subclass for the application);\n23888\n\n\nPICTORIAL COMMUNICATION, e.g. TELEVISION\n13297\n\n\nACYCLIC OR CARBOCYCLIC COMPOUNDS (macromolecular compounds C08; production of organic compounds by electrolysis or electrophoresis C25B0003000000, C25B0007000000)\n9231\n\n\nVEHICLE TYRES (manufacture, repairing B29); TYRE INFLATION; TYRE CHANGING; CONNECTING VALVES TO INFLATABLE ELASTIC BODIES IN GENERAL; DEVICES OR ARRANGEMENTS RELATED TO TYRES (testing of tyres G01M0017020000)\n7860\n\n\n\n\n\n\n\n\n\ntop_city = data_brevet %&gt;%\n  group_by(addr_city_main) %&gt;%\n  summarize(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  slice_head(n = 5)\n\nkable(top_city, caption = \"Top 5 des villes par nombre de brevets\", format=\"markdown\")\n\n\nTop 5 des villes par nombre de brevets\n\n\naddr_city_main\ntotal_patents\n\n\n\n\nParis\n113725\n\n\nBoulogne Billancourt\n20284\n\n\nCourbevoie\n16623\n\n\nIssy les Moulineaux\n10852\n\n\nRueil Malmaison\n9782\n\n\n\n\n\n\n\n\n\ntop_addr_dept = data_brevet %&gt;%\n  group_by(addr_dept_main) %&gt;%\n  summarize(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  slice_head(n = 5)\n\nkable(top_addr_dept, caption = \"Top 5 des départements par nombre de brevets\", format=\"markdown\")\n\n\nTop 5 des départements par nombre de brevets\n\n\naddr_dept_main\ntotal_patents\n\n\n\n\nFR101\n112606\n\n\nFR105\n80942\n\n\nFR103\n18569\n\n\nFR716\n13962\n\n\nFR724\n9641"
  },
  {
    "objectID": "statistique.html#statistiques-pour-la-base-de-donnée-emp_inno",
    "href": "statistique.html#statistiques-pour-la-base-de-donnée-emp_inno",
    "title": "statistiques",
    "section": "Statistiques pour la base de donnée emp_inno",
    "text": "Statistiques pour la base de donnée emp_inno\n\nCode pour les brevets\n\n#Analyse numérique pour n_patents :\nstats_nb_patents &lt;- merge_data %&gt;%\n  summarize(\n    Minimum = min(n_patents, na.rm = TRUE),\n    Médiane = median(n_patents, na.rm = TRUE),\n    Maximum = max(n_patents, na.rm = TRUE),\n    Moyenne = mean(n_patents, na.rm = TRUE),\n    Ecart_Type = sd(n_patents, na.rm = TRUE),\n    Manquants = sum(is.na(n_patents))\n  )\nstats_nb_patents &lt;- stats_nb_patents %&gt;%\n  mutate(stat_name = \"n_patents\") %&gt;%\n  relocate(stat_name)  # Déplacer la colonne 'stat_name' en premier\n\n\n\nCode pour les offres\n\n#Analyse numérique pour n_offres :\nstats_nb_offres &lt;- merge_data %&gt;%\n  summarize(\n    Minimum = min(n_offres, na.rm = TRUE),\n    Médiane = median(n_offres, na.rm = TRUE),\n    Maximum = max(n_offres, na.rm = TRUE),\n    Moyenne = mean(n_offres, na.rm = TRUE),\n    Ecart_Type = sd(n_offres, na.rm = TRUE),\n    Manquants = sum(is.na(n_offres))\n  )\n\nstats_nb_offres &lt;- stats_nb_offres %&gt;%\n  mutate(stat_name = \"n_offres\") %&gt;%\n  relocate(stat_name)  # Déplacer la colonne 'stat_name' en premier\n\n\n\nCode pour les salaires moyens\n\n#Analyse numérique pour avg_wage:\nstats_avrg_wage &lt;- merge_data %&gt;%\n  summarize(\n    Minimum = min(avg_wage, na.rm = TRUE),\n    Médiane = median(avg_wage, na.rm = TRUE),\n    Maximum = max(avg_wage, na.rm = TRUE),\n    Moyenne = mean(avg_wage, na.rm = TRUE),\n    Ecart_Type = sd(avg_wage, na.rm = TRUE),\n    Manquants = sum(is.na(avg_wage))\n  )\n\nstats_avrg_wage &lt;- stats_avrg_wage %&gt;%\n  mutate(stat_name = \"wage\") %&gt;%\n  relocate(stat_name)  # Déplacer la colonne 'stat_name' en premier\n\nstats = rbind(rbind(stats_nb_patents, stats_nb_offres),stats_avrg_wage)\n\n\n\nRésultats Statistiques\n\n\n\nStatistiques\n\n\n\n\n\n\n\n\n\n\n\nstat_name\nMinimum\nMédiane\nMaximum\nMoyenne\nEcart_Type\nManquants\n\n\n\n\nn_patents\n1\n4\n20126\n28.181881\n302.406840\n725\n\n\nn_offres\n1\n1\n67\n3.892169\n7.739571\n12982\n\n\nwage\n5000\n40000\n80000\n41472.019231\n10134.201249\n13605"
  },
  {
    "objectID": "statistique.html#statistiques-sur-la-base-de-données-des-emplois",
    "href": "statistique.html#statistiques-sur-la-base-de-données-des-emplois",
    "title": "statistiques",
    "section": "**Statistiques sur la base de données des emplois",
    "text": "**Statistiques sur la base de données des emplois\n\nStatistiques pour n_offres\n\nstat_n_offres = data_emp %&gt;% summarize( min = min(n_offres, na.rm = TRUE), median = median(n_offres, na.rm = TRUE), max = max(n_offres, na.rm = TRUE), mean = mean(n_offres, na.rm = TRUE), sd = sd(n_offres, na.rm = TRUE), missing = sum(is.na(n_offres)))\n\nstat_n_offres &lt;- stat_n_offres %&gt;%\n  mutate(stat_name = \"n offres\") %&gt;%\n  relocate(stat_name)  # Déplacer la colonne 'stat_name' en premier\n\nkable(stat_n_offres, caption = \"Statistiques pour n_offres\", format=\"markdown\")\n\n\nStatistiques pour n_offres\n\n\nstat_name\nmin\nmedian\nmax\nmean\nsd\nmissing\n\n\n\n\nn offres\n1\n1\n67\n3.892169\n7.739571\n0\n\n\n\n\n\n##Statistiques sur la base de données des emplois\n\n\nStatistiques sur le salaire moyen\n\nstat_avg_wage = data_emp %&gt;% summarize( min = min(avg_wage, na.rm = TRUE), median = median(avg_wage, na.rm = TRUE), max = max(avg_wage, na.rm = TRUE), mean = mean(avg_wage, na.rm = TRUE), sd = sd(avg_wage, na.rm = TRUE), missing = sum(is.na(avg_wage)) )\n\nstat_avg_wage &lt;- stat_avg_wage %&gt;%\n  mutate(stat_name = \"wage\") %&gt;%\n  relocate(stat_name)  # Déplacer la colonne 'stat_name' en premier\n\nkable(stat_avg_wage, caption = \"Statistiques pour avg_wage\", format=\"markdown\")\n\n\nStatistiques pour avg_wage\n\n\nstat_name\nmin\nmedian\nmax\nmean\nsd\nmissing\n\n\n\n\nwage\n5000\n40000\n80000\n41472.02\n10134.2\n623\n\n\n\n\n\n\n\nTop 5 des entreprises par salaire moyen\n\nfirm = data_emp %&gt;% group_by(firm_name) %&gt;% summarize(mean_wage = mean(avg_wage, na.rm = TRUE))  %&gt;%  arrange(desc(mean_wage)) %&gt;%  slice_head(n = 5)\n\nkable(firm, caption = \"Top 5 des entreprises par salaire moyen\", format=\"markdown\")\n\n\nTop 5 des entreprises par salaire moyen\n\n\nfirm_name\nmean_wage\n\n\n\n\nLITY\n80000\n\n\nDANEM PEOPLE FRANCE\n75000\n\n\nADONE CONSEIL\n70000\n\n\nNODYA GROUP\n65333\n\n\nKICKLOX\n65000\n\n\n\n\n\n\n\nTop 5 des secteurs par salaire moyen\n\nsect_salary = data_emp  %&gt;%  group_by(sector_main)  %&gt;%  summarize(mean_wage = mean(avg_wage, na.rm = TRUE))  %&gt;%  arrange(desc(mean_wage))  %&gt;%  slice_head(n = 5)\n\nkable(sect_salary, caption = \"Top 5 des secteurs par salaire moyen\", format=\"markdown\")\n\n\nTop 5 des secteurs par salaire moyen\n\n\n\n\n\n\nsector_main\nmean_wage\n\n\n\n\nService public des collectivités territoriales\n60000\n\n\nBEP, CAP, Services aux Personnes, Particuliers\n52500\n\n\nAgriculture, Pêche\n49091\n\n\nIndustrie high-tech, Telecom, Média, Internet, Communication\n48000\n\n\nBTP, Secteur Energie, Environnement\n45000\n\n\n\n\n\n\n\nTop 5 des départements par salaire moyen\n\naddr = data_emp %&gt;% group_by(addr_dept_main)  %&gt;%  summarize(mean_wage = mean(avg_wage, na.rm = TRUE))  %&gt;%  arrange(desc(mean_wage))  %&gt;%  slice_head(n = 5)\n\nkable(addr, caption = \"Top 5 des départements par salaire moyen\", format=\"markdown\")\n\n\nTop 5 des départements par salaire moyen\n\n\naddr_dept_main\nmean_wage\n\n\n\n\n45\n55000.00\n\n\n78\n53333.33\n\n\n38\n50000.00\n\n\n75\n48102.68\n\n\n56\n45000.00"
  },
  {
    "objectID": "statistique.html#statistiques-pour-la-base-des-emplois",
    "href": "statistique.html#statistiques-pour-la-base-des-emplois",
    "title": "statistiques",
    "section": "Statistiques pour la base des emplois",
    "text": "Statistiques pour la base des emplois\n\nStatistiques pour les offres\n\nstat_n_offres = data_emp %&gt;% summarize( min = min(n_offres, na.rm = TRUE), median = median(n_offres, na.rm = TRUE), max = max(n_offres, na.rm = TRUE), mean = mean(n_offres, na.rm = TRUE), sd = sd(n_offres, na.rm = TRUE), missing = sum(is.na(n_offres)))\n\nstat_n_offres &lt;- stat_n_offres %&gt;%\n  mutate(stat_name = \"n offres\") %&gt;%\n  relocate(stat_name)  # Déplacer la colonne 'stat_name' en premier\n\nkable(stat_n_offres, caption = \"Statistiques pour n_offres\", format=\"markdown\")\n\n\nStatistiques pour n_offres\n\n\nstat_name\nmin\nmedian\nmax\nmean\nsd\nmissing\n\n\n\n\nn offres\n1\n1\n67\n3.892169\n7.739571\n0\n\n\n\n\n\n\n\nStatistiques sur le salaire moyen\n\nstat_avg_wage = data_emp %&gt;% summarize( min = min(avg_wage, na.rm = TRUE), median = median(avg_wage, na.rm = TRUE), max = max(avg_wage, na.rm = TRUE), mean = mean(avg_wage, na.rm = TRUE), sd = sd(avg_wage, na.rm = TRUE), missing = sum(is.na(avg_wage)) )\n\nstat_avg_wage &lt;- stat_avg_wage %&gt;%\n  mutate(stat_name = \"wage\") %&gt;%\n  relocate(stat_name)  # Déplacer la colonne 'stat_name' en premier\n\nkable(stat_avg_wage, caption = \"Statistiques pour avg_wage\", format=\"markdown\")\n\n\nStatistiques pour avg_wage\n\n\nstat_name\nmin\nmedian\nmax\nmean\nsd\nmissing\n\n\n\n\nwage\n5000\n40000\n80000\n41472.02\n10134.2\n623\n\n\n\n\n\n\n\nTop 5 des entreprises par salaire moyen\n\nfirm = data_emp %&gt;% group_by(firm_name) %&gt;% summarize(mean_wage = mean(avg_wage, na.rm = TRUE))  %&gt;%  arrange(desc(mean_wage)) %&gt;%  slice_head(n = 5)\n\nkable(firm, caption = \"Top 5 des entreprises par salaire moyen\", format=\"markdown\")\n\n\nTop 5 des entreprises par salaire moyen\n\n\nfirm_name\nmean_wage\n\n\n\n\nLITY\n80000\n\n\nDANEM PEOPLE FRANCE\n75000\n\n\nADONE CONSEIL\n70000\n\n\nNODYA GROUP\n65333\n\n\nKICKLOX\n65000\n\n\n\n\n\n\n\nTop 5 des secteurs par salaire moyen\n\nsect_salary = data_emp  %&gt;%  group_by(sector_main)  %&gt;%  summarize(mean_wage = mean(avg_wage, na.rm = TRUE))  %&gt;%  arrange(desc(mean_wage))  %&gt;%  slice_head(n = 5)\n\nkable(sect_salary, caption = \"Top 5 des secteurs par salaire moyen\", format=\"markdown\")\n\n\nTop 5 des secteurs par salaire moyen\n\n\n\n\n\n\nsector_main\nmean_wage\n\n\n\n\nService public des collectivités territoriales\n60000\n\n\nBEP, CAP, Services aux Personnes, Particuliers\n52500\n\n\nAgriculture, Pêche\n49091\n\n\nIndustrie high-tech, Telecom, Média, Internet, Communication\n48000\n\n\nBTP, Secteur Energie, Environnement\n45000\n\n\n\n\n\n\n\nTop 5 des départements par salaire moyen\n\naddr = data_emp %&gt;% group_by(addr_dept_main)  %&gt;%  summarize(mean_wage = mean(avg_wage, na.rm = TRUE))  %&gt;%  arrange(desc(mean_wage))  %&gt;%  slice_head(n = 5)\n\nkable(addr, caption = \"Top 5 des départements par salaire moyen\", format=\"markdown\")\n\n\nTop 5 des départements par salaire moyen\n\n\naddr_dept_main\nmean_wage\n\n\n\n\n45\n55000.00\n\n\n78\n53333.33\n\n\n38\n50000.00\n\n\n75\n48102.68\n\n\n56\n45000.00"
  }
]