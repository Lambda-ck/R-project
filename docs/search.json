[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Projet R",
    "section": "",
    "text": "Nous vous presentons notre projet dans le cadre du cours “Remediation en R” du master IREF-ERDS. L’objectif de ce projet et de comprendre le lien entre la performance d’innovation des entreprises (mesurée par les dépots de brevets) et leur demande de compétences. Nous avons donc réalisé une partie statistique descriptive et une partie analyse pour tenter de répondre à cette problématique. Nous vous laissons les consulter via les onglets du site."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html#sidebar",
    "href": "index.html#sidebar",
    "title": "R project",
    "section": "Sidebar",
    "text": "Sidebar\n\nSidebar Title\nSidebar content"
  },
  {
    "objectID": "index.html#sidebar-title",
    "href": "index.html#sidebar-title",
    "title": "R project",
    "section": "Sidebar Title",
    "text": "Sidebar Title\nSidebar content"
  },
  {
    "objectID": "membre.html",
    "href": "membre.html",
    "title": "Membre du groupe",
    "section": "",
    "text": "##First Name Last name\n##First Name Last name\n##First Name Last name\n##First Name Last name",
    "crumbs": [
      "Acceuil",
      "Membres du groupe"
    ]
  },
  {
    "objectID": "statistique.html",
    "href": "statistique.html",
    "title": "statistiques",
    "section": "",
    "text": "#install.packages('dplyr')\nlibrary(dplyr)\n\n\nmerge_data = read.csv(\"base_emp_inno.csv\")\ndata_brevet = read.csv(\"base_brevets.csv\")\ndata_emp = read.csv(\"base_emp.csv\")\n\nstats_n_patents &lt;- data_brevet %&gt;%\n  summarize(\n    min = min(n_patents, na.rm = TRUE),\n    median = median(n_patents, na.rm = TRUE),\n    max = max(n_patents, na.rm = TRUE),\n    mean = mean(n_patents, na.rm = TRUE),\n    sd = sd(n_patents, na.rm = TRUE),\n    missing = sum(is.na(n_patents))\n  )\n#On renomme les lignes\nstats_n_patents &lt;- stats_n_patents %&gt;%\n  rename(\n    Minimum = min,\n    Médiane = median,\n    Maximum = max,\n    Moyenne = mean,\n    Ecart_Type = sd,\n    Manquants = missing\n  )\n\n#Ajouter une ligne nommée\nstats_n_patents &lt;- stats_n_patents %&gt;%\n  mutate(stat_name = \"n patents\") %&gt;%\n  relocate(stat_name)  # Déplacer la colonne 'stat_name' en premier\n\n\nStatistiques pour n_patents\n\n\nstat_name\nMinimum\nMédiane\nMaximum\nMoyenne\nEcart_Type\nManquants\n\n\n\n\nn patents\n1\n4\n20126\n28.18188\n302.4068\n0\n\n\n\n\n\n\n\ntop_firm = data_brevet %&gt;%\n  group_by(firm_name) %&gt;%\n  summarize(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  slice_head(n = 5)\n\nkable(top_firm, caption = \"Top 5 des entreprises par nombre de brevets\", format=\"markdown\")\n\n\nTop 5 des entreprises par nombre de brevets\n\n\n\n\n\n\nfirm_name\ntotal_patents\n\n\n\n\nCOMMISSARIAT A L’ENERGIE ATOMIQUE ET AUX ENERGIES ALTERNATIVES\n20126\n\n\nALCATEL LUCENT\n10807\n\n\nCENTRE NATIONAL DE LA RECHERCHE SCIENTIFIQUE\n9633\n\n\nTHOMSON LICENSING\n9194\n\n\nL’OREAL\n9094\n\n\n\n\n\n\n\n\n\ntop_ipc_main_desc = data_brevet %&gt;%\n  filter(!is.na(ipc_main_desc)) %&gt;%  # Exclure les NA dans ipc_main_desc\n  group_by(ipc_main_desc) %&gt;%\n  summarize(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  slice_head(n = 5)\n\nkable(top_ipc_main_desc, caption = \"Top 5 ipc_main_desc par nombre de brevets\", format=\"markdown\")\n\n\nTop 5 ipc_main_desc par nombre de brevets\n\n\n\n\n\n\nipc_main_desc\ntotal_patents\n\n\n\n\nNucleic acids or oligonucleotides having modified bases, i.e. other than adenine, guanine, cytosine, uracil or thymine\n75837\n\n\nSEMICONDUCTOR DEVICES; ELECTRIC SOLID STATE DEVICES NOT OTHERWISE PROVIDED FOR (use of semiconductor devices for measuring G01; resistors in general H01C; magnets, inductors, transformers H01F; capacitors in general H01G; electrolytic devices H01G0009000000; batteries, accumulators H01M; waveguides, resonators, or lines of the waveguide type H01P; line connectors, current collectors H01R; stimulated-emission devices H01S; electromechanical resonators H03H; loudspeakers, microphones, gramophone pick-ups or like acoustic electromechanical transducers H04R; electric light sources in general H05B; printed circuits, hybrid circuits, casings or constructional details of electrical apparatus, manufacture of assemblages of electrical components H05K; use of semiconductor devices in circuits having a particular application, see the subclass for the application);\n23888\n\n\nPICTORIAL COMMUNICATION, e.g. TELEVISION\n13297\n\n\nACYCLIC OR CARBOCYCLIC COMPOUNDS (macromolecular compounds C08; production of organic compounds by electrolysis or electrophoresis C25B0003000000, C25B0007000000)\n9231\n\n\nVEHICLE TYRES (manufacture, repairing B29); TYRE INFLATION; TYRE CHANGING; CONNECTING VALVES TO INFLATABLE ELASTIC BODIES IN GENERAL; DEVICES OR ARRANGEMENTS RELATED TO TYRES (testing of tyres G01M0017020000)\n7860\n\n\n\n\n\n\n\n\n\ntop_city = data_brevet %&gt;%\n  group_by(addr_city_main) %&gt;%\n  summarize(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  slice_head(n = 5)\n\nkable(top_city, caption = \"Top 5 des villes par nombre de brevets\", format=\"markdown\")\n\n\nTop 5 des villes par nombre de brevets\n\n\naddr_city_main\ntotal_patents\n\n\n\n\nParis\n113725\n\n\nBoulogne Billancourt\n20284\n\n\nCourbevoie\n16623\n\n\nIssy les Moulineaux\n10852\n\n\nRueil Malmaison\n9782\n\n\n\n\n\n\n\n\n\ntop_addr_dept = data_brevet %&gt;%\n  group_by(addr_dept_main) %&gt;%\n  summarize(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  slice_head(n = 5)\n\nkable(top_addr_dept, caption = \"Top 5 des départements par nombre de brevets\", format=\"markdown\")\n\n\nTop 5 des départements par nombre de brevets\n\n\naddr_dept_main\ntotal_patents\n\n\n\n\nFR101\n112606\n\n\nFR105\n80942\n\n\nFR103\n18569\n\n\nFR716\n13962\n\n\nFR724\n9641"
  },
  {
    "objectID": "statistique.html#statistique-pour-la-base-brevet",
    "href": "statistique.html#statistique-pour-la-base-brevet",
    "title": "statistique",
    "section": "",
    "text": "#install.packages('dplyr')\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nmerge_data = read.csv(\"base_emp_inno.csv\")\ndata_brevet = read.csv(\"base_brevets.csv\")\ndata_emp = read.csv(\"base_emp.csv\")\n\nstats_n_patents &lt;- data_brevet %&gt;%\n  summarize(\n    min = min(n_patents, na.rm = TRUE),\n    median = median(n_patents, na.rm = TRUE),\n    max = max(n_patents, na.rm = TRUE),\n    mean = mean(n_patents, na.rm = TRUE),\n    sd = sd(n_patents, na.rm = TRUE),\n    missing = sum(is.na(n_patents))\n  )\n#On renomme les lignes\nstats_n_patents &lt;- stats_n_patents %&gt;%\n  rename(\n    Minimum = min,\n    Médiane = median,\n    Maximum = max,\n    Moyenne = mean,\n    Ecart_Type = sd,\n    Manquants = missing\n  )\n\n#Ajouter une ligne nommée\nstats_n_patents &lt;- stats_n_patents %&gt;%\n  mutate(stat_name = \"n patents\") %&gt;%\n  relocate(stat_name)  # Déplacer la colonne 'stat_name' en premier\n\n\nStatistiques pour n_patents\n\n\nstat_name\nMinimum\nMédiane\nMaximum\nMoyenne\nEcart_Type\nManquants\n\n\n\n\nn patents\n1\n4\n20126\n28.18188\n302.4068\n0"
  },
  {
    "objectID": "statistique.html#top-5-firm_name-par-nombre-de-brevets",
    "href": "statistique.html#top-5-firm_name-par-nombre-de-brevets",
    "title": "statistiques",
    "section": "Top 5 firm_name par nombre de brevets",
    "text": "Top 5 firm_name par nombre de brevets\n\ntop_firm = data_brevet %&gt;%\n  group_by(firm_name) %&gt;%\n  summarize(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  slice_head(n = 5)\n\nkable(top_firm, caption = \"Top 5 firm_name par nombre de brevets\", format=\"markdown\")\n\n\nTop 5 firm_name par nombre de brevets\n\n\n\n\n\n\nfirm_name\ntotal_patents\n\n\n\n\nCOMMISSARIAT A L’ENERGIE ATOMIQUE ET AUX ENERGIES ALTERNATIVES\n20126\n\n\nALCATEL LUCENT\n10807\n\n\nCENTRE NATIONAL DE LA RECHERCHE SCIENTIFIQUE\n9633\n\n\nTHOMSON LICENSING\n9194\n\n\nL’OREAL\n9094"
  },
  {
    "objectID": "statistique.html#top-5-ipc_main_desc-par-nombre-de-brevets",
    "href": "statistique.html#top-5-ipc_main_desc-par-nombre-de-brevets",
    "title": "statistiques",
    "section": "Top 5 ipc_main_desc par nombre de brevets",
    "text": "Top 5 ipc_main_desc par nombre de brevets\n\ntop_ipc_main_desc = data_brevet %&gt;%\n  filter(!is.na(ipc_main_desc)) %&gt;%  # Exclure les NA dans ipc_main_desc\n  group_by(ipc_main_desc) %&gt;%\n  summarize(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  slice_head(n = 5)\n\nkable(top_ipc_main_desc, caption = \"Top 5 ipc_main_desc par nombre de brevets\", format=\"markdown\")\n\n\nTop 5 ipc_main_desc par nombre de brevets\n\n\n\n\n\n\nipc_main_desc\ntotal_patents\n\n\n\n\nNucleic acids or oligonucleotides having modified bases, i.e. other than adenine, guanine, cytosine, uracil or thymine\n75837\n\n\nSEMICONDUCTOR DEVICES; ELECTRIC SOLID STATE DEVICES NOT OTHERWISE PROVIDED FOR (use of semiconductor devices for measuring G01; resistors in general H01C; magnets, inductors, transformers H01F; capacitors in general H01G; electrolytic devices H01G0009000000; batteries, accumulators H01M; waveguides, resonators, or lines of the waveguide type H01P; line connectors, current collectors H01R; stimulated-emission devices H01S; electromechanical resonators H03H; loudspeakers, microphones, gramophone pick-ups or like acoustic electromechanical transducers H04R; electric light sources in general H05B; printed circuits, hybrid circuits, casings or constructional details of electrical apparatus, manufacture of assemblages of electrical components H05K; use of semiconductor devices in circuits having a particular application, see the subclass for the application);\n23888\n\n\nPICTORIAL COMMUNICATION, e.g. TELEVISION\n13297\n\n\nACYCLIC OR CARBOCYCLIC COMPOUNDS (macromolecular compounds C08; production of organic compounds by electrolysis or electrophoresis C25B0003000000, C25B0007000000)\n9231\n\n\nVEHICLE TYRES (manufacture, repairing B29); TYRE INFLATION; TYRE CHANGING; CONNECTING VALVES TO INFLATABLE ELASTIC BODIES IN GENERAL; DEVICES OR ARRANGEMENTS RELATED TO TYRES (testing of tyres G01M0017020000)\n7860\n\n\n\n\n\n\ntop_city = data_brevet %&gt;%\n  group_by(addr_city_main) %&gt;%\n  summarize(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  slice_head(n = 5)\n\nkable(top_city, caption = \"Top 5 addr_city_main par nombre de brevets\", format=\"markdown\")\n\n\nTop 5 addr_city_main par nombre de brevets\n\n\naddr_city_main\ntotal_patents\n\n\n\n\nParis\n113725\n\n\nBoulogne Billancourt\n20284\n\n\nCourbevoie\n16623\n\n\nIssy les Moulineaux\n10852\n\n\nRueil Malmaison\n9782\n\n\n\n\n\n\ntop_addr_dept = data_brevet %&gt;%\n  group_by(addr_dept_main) %&gt;%\n  summarize(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  slice_head(n = 5)\n\nkable(top_addr_dept, caption = \"Top 5 addr_dept_main par nombre de brevets\", format=\"markdown\")\n\n\nTop 5 addr_dept_main par nombre de brevets\n\n\naddr_dept_main\ntotal_patents\n\n\n\n\nFR101\n112606\n\n\nFR105\n80942\n\n\nFR103\n18569\n\n\nFR716\n13962\n\n\nFR724\n9641"
  },
  {
    "objectID": "statistique.html#statistiques-pour-la-base-brevet",
    "href": "statistique.html#statistiques-pour-la-base-brevet",
    "title": "statistiques",
    "section": "",
    "text": "#install.packages('dplyr')\nlibrary(dplyr)\n\n\nmerge_data = read.csv(\"base_emp_inno.csv\")\ndata_brevet = read.csv(\"base_brevets.csv\")\ndata_emp = read.csv(\"base_emp.csv\")\n\nstats_n_patents &lt;- data_brevet %&gt;%\n  summarize(\n    min = min(n_patents, na.rm = TRUE),\n    median = median(n_patents, na.rm = TRUE),\n    max = max(n_patents, na.rm = TRUE),\n    mean = mean(n_patents, na.rm = TRUE),\n    sd = sd(n_patents, na.rm = TRUE),\n    missing = sum(is.na(n_patents))\n  )\n#On renomme les lignes\nstats_n_patents &lt;- stats_n_patents %&gt;%\n  rename(\n    Minimum = min,\n    Médiane = median,\n    Maximum = max,\n    Moyenne = mean,\n    Ecart_Type = sd,\n    Manquants = missing\n  )\n\n#Ajouter une ligne nommée\nstats_n_patents &lt;- stats_n_patents %&gt;%\n  mutate(stat_name = \"n patents\") %&gt;%\n  relocate(stat_name)  # Déplacer la colonne 'stat_name' en premier\n\n\nStatistiques pour n_patents\n\n\nstat_name\nMinimum\nMédiane\nMaximum\nMoyenne\nEcart_Type\nManquants\n\n\n\n\nn patents\n1\n4\n20126\n28.18188\n302.4068\n0\n\n\n\n\n\n\n\ntop_firm = data_brevet %&gt;%\n  group_by(firm_name) %&gt;%\n  summarize(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  slice_head(n = 5)\n\nkable(top_firm, caption = \"Top 5 des entreprises par nombre de brevets\", format=\"markdown\")\n\n\nTop 5 des entreprises par nombre de brevets\n\n\n\n\n\n\nfirm_name\ntotal_patents\n\n\n\n\nCOMMISSARIAT A L’ENERGIE ATOMIQUE ET AUX ENERGIES ALTERNATIVES\n20126\n\n\nALCATEL LUCENT\n10807\n\n\nCENTRE NATIONAL DE LA RECHERCHE SCIENTIFIQUE\n9633\n\n\nTHOMSON LICENSING\n9194\n\n\nL’OREAL\n9094\n\n\n\n\n\n\n\n\n\ntop_ipc_main_desc = data_brevet %&gt;%\n  filter(!is.na(ipc_main_desc)) %&gt;%  # Exclure les NA dans ipc_main_desc\n  group_by(ipc_main_desc) %&gt;%\n  summarize(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  slice_head(n = 5)\n\nkable(top_ipc_main_desc, caption = \"Top 5 ipc_main_desc par nombre de brevets\", format=\"markdown\")\n\n\nTop 5 ipc_main_desc par nombre de brevets\n\n\n\n\n\n\nipc_main_desc\ntotal_patents\n\n\n\n\nNucleic acids or oligonucleotides having modified bases, i.e. other than adenine, guanine, cytosine, uracil or thymine\n75837\n\n\nSEMICONDUCTOR DEVICES; ELECTRIC SOLID STATE DEVICES NOT OTHERWISE PROVIDED FOR (use of semiconductor devices for measuring G01; resistors in general H01C; magnets, inductors, transformers H01F; capacitors in general H01G; electrolytic devices H01G0009000000; batteries, accumulators H01M; waveguides, resonators, or lines of the waveguide type H01P; line connectors, current collectors H01R; stimulated-emission devices H01S; electromechanical resonators H03H; loudspeakers, microphones, gramophone pick-ups or like acoustic electromechanical transducers H04R; electric light sources in general H05B; printed circuits, hybrid circuits, casings or constructional details of electrical apparatus, manufacture of assemblages of electrical components H05K; use of semiconductor devices in circuits having a particular application, see the subclass for the application);\n23888\n\n\nPICTORIAL COMMUNICATION, e.g. TELEVISION\n13297\n\n\nACYCLIC OR CARBOCYCLIC COMPOUNDS (macromolecular compounds C08; production of organic compounds by electrolysis or electrophoresis C25B0003000000, C25B0007000000)\n9231\n\n\nVEHICLE TYRES (manufacture, repairing B29); TYRE INFLATION; TYRE CHANGING; CONNECTING VALVES TO INFLATABLE ELASTIC BODIES IN GENERAL; DEVICES OR ARRANGEMENTS RELATED TO TYRES (testing of tyres G01M0017020000)\n7860\n\n\n\n\n\n\n\n\n\ntop_city = data_brevet %&gt;%\n  group_by(addr_city_main) %&gt;%\n  summarize(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  slice_head(n = 5)\n\nkable(top_city, caption = \"Top 5 des villes par nombre de brevets\", format=\"markdown\")\n\n\nTop 5 des villes par nombre de brevets\n\n\naddr_city_main\ntotal_patents\n\n\n\n\nParis\n113725\n\n\nBoulogne Billancourt\n20284\n\n\nCourbevoie\n16623\n\n\nIssy les Moulineaux\n10852\n\n\nRueil Malmaison\n9782\n\n\n\n\n\n\n\n\n\ntop_addr_dept = data_brevet %&gt;%\n  group_by(addr_dept_main) %&gt;%\n  summarize(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  slice_head(n = 5)\n\nkable(top_addr_dept, caption = \"Top 5 des départements par nombre de brevets\", format=\"markdown\")\n\n\nTop 5 des départements par nombre de brevets\n\n\naddr_dept_main\ntotal_patents\n\n\n\n\nFR101\n112606\n\n\nFR105\n80942\n\n\nFR103\n18569\n\n\nFR716\n13962\n\n\nFR724\n9641"
  },
  {
    "objectID": "statistique.html#statistiques-pour-la-base-de-donnée-emp_inno",
    "href": "statistique.html#statistiques-pour-la-base-de-donnée-emp_inno",
    "title": "statistiques",
    "section": "Statistiques pour la base de donnée emp_inno",
    "text": "Statistiques pour la base de donnée emp_inno\n\nCode pour les brevets\n\n#Analyse numérique pour n_patents :\nstats_nb_patents &lt;- merge_data %&gt;%\n  summarize(\n    Minimum = min(n_patents, na.rm = TRUE),\n    Médiane = median(n_patents, na.rm = TRUE),\n    Maximum = max(n_patents, na.rm = TRUE),\n    Moyenne = mean(n_patents, na.rm = TRUE),\n    Ecart_Type = sd(n_patents, na.rm = TRUE),\n    Manquants = sum(is.na(n_patents))\n  )\nstats_nb_patents &lt;- stats_nb_patents %&gt;%\n  mutate(stat_name = \"n_patents\") %&gt;%\n  relocate(stat_name)  # Déplacer la colonne 'stat_name' en premier\n\n\n\nCode pour les offres\n\n#Analyse numérique pour n_offres :\nstats_nb_offres &lt;- merge_data %&gt;%\n  summarize(\n    Minimum = min(n_offres, na.rm = TRUE),\n    Médiane = median(n_offres, na.rm = TRUE),\n    Maximum = max(n_offres, na.rm = TRUE),\n    Moyenne = mean(n_offres, na.rm = TRUE),\n    Ecart_Type = sd(n_offres, na.rm = TRUE),\n    Manquants = sum(is.na(n_offres))\n  )\n\nstats_nb_offres &lt;- stats_nb_offres %&gt;%\n  mutate(stat_name = \"n_offres\") %&gt;%\n  relocate(stat_name)  # Déplacer la colonne 'stat_name' en premier\n\n\n\nCode pour les salaires moyens\n\n#Analyse numérique pour avg_wage:\nstats_avrg_wage &lt;- merge_data %&gt;%\n  summarize(\n    Minimum = min(avg_wage, na.rm = TRUE),\n    Médiane = median(avg_wage, na.rm = TRUE),\n    Maximum = max(avg_wage, na.rm = TRUE),\n    Moyenne = mean(avg_wage, na.rm = TRUE),\n    Ecart_Type = sd(avg_wage, na.rm = TRUE),\n    Manquants = sum(is.na(avg_wage))\n  )\n\nstats_avrg_wage &lt;- stats_avrg_wage %&gt;%\n  mutate(stat_name = \"wage\") %&gt;%\n  relocate(stat_name)  # Déplacer la colonne 'stat_name' en premier\n\nstats = rbind(rbind(stats_nb_patents, stats_nb_offres),stats_avrg_wage)\n\n\n\nRésultats Statistiques\n\n\n\nStatistiques\n\n\n\n\n\n\n\n\n\n\n\nstat_name\nMinimum\nMédiane\nMaximum\nMoyenne\nEcart_Type\nManquants\n\n\n\n\nn_patents\n1\n4\n20126\n28.181881\n302.406840\n725\n\n\nn_offres\n1\n1\n67\n3.892169\n7.739571\n12982\n\n\nwage\n5000\n40000\n80000\n41472.019231\n10134.201249\n13605"
  },
  {
    "objectID": "statistique.html#statistiques-sur-la-base-de-données-des-emplois",
    "href": "statistique.html#statistiques-sur-la-base-de-données-des-emplois",
    "title": "statistiques",
    "section": "**Statistiques sur la base de données des emplois",
    "text": "**Statistiques sur la base de données des emplois\n\nStatistiques pour n_offres\n\nstat_n_offres = data_emp %&gt;% summarize( min = min(n_offres, na.rm = TRUE), median = median(n_offres, na.rm = TRUE), max = max(n_offres, na.rm = TRUE), mean = mean(n_offres, na.rm = TRUE), sd = sd(n_offres, na.rm = TRUE), missing = sum(is.na(n_offres)))\n\nstat_n_offres &lt;- stat_n_offres %&gt;%\n  mutate(stat_name = \"n offres\") %&gt;%\n  relocate(stat_name)  # Déplacer la colonne 'stat_name' en premier\n\nkable(stat_n_offres, caption = \"Statistiques pour n_offres\", format=\"markdown\")\n\n\nStatistiques pour n_offres\n\n\nstat_name\nmin\nmedian\nmax\nmean\nsd\nmissing\n\n\n\n\nn offres\n1\n1\n67\n3.892169\n7.739571\n0\n\n\n\n\n\n##Statistiques sur la base de données des emplois\n\n\nStatistiques sur le salaire moyen\n\nstat_avg_wage = data_emp %&gt;% summarize( min = min(avg_wage, na.rm = TRUE), median = median(avg_wage, na.rm = TRUE), max = max(avg_wage, na.rm = TRUE), mean = mean(avg_wage, na.rm = TRUE), sd = sd(avg_wage, na.rm = TRUE), missing = sum(is.na(avg_wage)) )\n\nstat_avg_wage &lt;- stat_avg_wage %&gt;%\n  mutate(stat_name = \"wage\") %&gt;%\n  relocate(stat_name)  # Déplacer la colonne 'stat_name' en premier\n\nkable(stat_avg_wage, caption = \"Statistiques pour avg_wage\", format=\"markdown\")\n\n\nStatistiques pour avg_wage\n\n\nstat_name\nmin\nmedian\nmax\nmean\nsd\nmissing\n\n\n\n\nwage\n5000\n40000\n80000\n41472.02\n10134.2\n623\n\n\n\n\n\n\n\nTop 5 des entreprises par salaire moyen\n\nfirm = data_emp %&gt;% group_by(firm_name) %&gt;% summarize(mean_wage = mean(avg_wage, na.rm = TRUE))  %&gt;%  arrange(desc(mean_wage)) %&gt;%  slice_head(n = 5)\n\nkable(firm, caption = \"Top 5 des entreprises par salaire moyen\", format=\"markdown\")\n\n\nTop 5 des entreprises par salaire moyen\n\n\nfirm_name\nmean_wage\n\n\n\n\nLITY\n80000\n\n\nDANEM PEOPLE FRANCE\n75000\n\n\nADONE CONSEIL\n70000\n\n\nNODYA GROUP\n65333\n\n\nKICKLOX\n65000\n\n\n\n\n\n\n\nTop 5 des secteurs par salaire moyen\n\nsect_salary = data_emp  %&gt;%  group_by(sector_main)  %&gt;%  summarize(mean_wage = mean(avg_wage, na.rm = TRUE))  %&gt;%  arrange(desc(mean_wage))  %&gt;%  slice_head(n = 5)\n\nkable(sect_salary, caption = \"Top 5 des secteurs par salaire moyen\", format=\"markdown\")\n\n\nTop 5 des secteurs par salaire moyen\n\n\n\n\n\n\nsector_main\nmean_wage\n\n\n\n\nService public des collectivités territoriales\n60000\n\n\nBEP, CAP, Services aux Personnes, Particuliers\n52500\n\n\nAgriculture, Pêche\n49091\n\n\nIndustrie high-tech, Telecom, Média, Internet, Communication\n48000\n\n\nBTP, Secteur Energie, Environnement\n45000\n\n\n\n\n\n\n\nTop 5 des départements par salaire moyen\n\naddr = data_emp %&gt;% group_by(addr_dept_main)  %&gt;%  summarize(mean_wage = mean(avg_wage, na.rm = TRUE))  %&gt;%  arrange(desc(mean_wage))  %&gt;%  slice_head(n = 5)\n\nkable(addr, caption = \"Top 5 des départements par salaire moyen\", format=\"markdown\")\n\n\nTop 5 des départements par salaire moyen\n\n\naddr_dept_main\nmean_wage\n\n\n\n\n45\n55000.00\n\n\n78\n53333.33\n\n\n38\n50000.00\n\n\n75\n48102.68\n\n\n56\n45000.00"
  },
  {
    "objectID": "statistique.html#statistiques-pour-la-base-des-emplois",
    "href": "statistique.html#statistiques-pour-la-base-des-emplois",
    "title": "statistiques",
    "section": "Statistiques pour la base des emplois",
    "text": "Statistiques pour la base des emplois\n\nStatistiques pour les offres\n\nstat_n_offres = data_emp %&gt;% summarize( min = min(n_offres, na.rm = TRUE), median = median(n_offres, na.rm = TRUE), max = max(n_offres, na.rm = TRUE), mean = mean(n_offres, na.rm = TRUE), sd = sd(n_offres, na.rm = TRUE), missing = sum(is.na(n_offres)))\n\nstat_n_offres &lt;- stat_n_offres %&gt;%\n  mutate(stat_name = \"n offres\") %&gt;%\n  relocate(stat_name)  # Déplacer la colonne 'stat_name' en premier\n\nkable(stat_n_offres, caption = \"Statistiques pour n_offres\", format=\"markdown\")\n\n\nStatistiques pour n_offres\n\n\nstat_name\nmin\nmedian\nmax\nmean\nsd\nmissing\n\n\n\n\nn offres\n1\n1\n67\n3.892169\n7.739571\n0\n\n\n\n\n\n\n\nStatistiques sur le salaire moyen\n\nstat_avg_wage = data_emp %&gt;% summarize( min = min(avg_wage, na.rm = TRUE), median = median(avg_wage, na.rm = TRUE), max = max(avg_wage, na.rm = TRUE), mean = mean(avg_wage, na.rm = TRUE), sd = sd(avg_wage, na.rm = TRUE), missing = sum(is.na(avg_wage)) )\n\nstat_avg_wage &lt;- stat_avg_wage %&gt;%\n  mutate(stat_name = \"wage\") %&gt;%\n  relocate(stat_name)  # Déplacer la colonne 'stat_name' en premier\n\nkable(stat_avg_wage, caption = \"Statistiques pour avg_wage\", format=\"markdown\")\n\n\nStatistiques pour avg_wage\n\n\nstat_name\nmin\nmedian\nmax\nmean\nsd\nmissing\n\n\n\n\nwage\n5000\n40000\n80000\n41472.02\n10134.2\n623\n\n\n\n\n\n\n\nTop 5 des entreprises par salaire moyen\n\nfirm = data_emp %&gt;% group_by(firm_name) %&gt;% summarize(mean_wage = mean(avg_wage, na.rm = TRUE))  %&gt;%  arrange(desc(mean_wage)) %&gt;%  slice_head(n = 5)\n\nkable(firm, caption = \"Top 5 des entreprises par salaire moyen\", format=\"markdown\")\n\n\nTop 5 des entreprises par salaire moyen\n\n\nfirm_name\nmean_wage\n\n\n\n\nLITY\n80000\n\n\nDANEM PEOPLE FRANCE\n75000\n\n\nADONE CONSEIL\n70000\n\n\nNODYA GROUP\n65333\n\n\nKICKLOX\n65000\n\n\n\n\n\n\n\nTop 5 des secteurs par salaire moyen\n\nsect_salary = data_emp  %&gt;%  group_by(sector_main)  %&gt;%  summarize(mean_wage = mean(avg_wage, na.rm = TRUE))  %&gt;%  arrange(desc(mean_wage))  %&gt;%  slice_head(n = 5)\n\nkable(sect_salary, caption = \"Top 5 des secteurs par salaire moyen\", format=\"markdown\")\n\n\nTop 5 des secteurs par salaire moyen\n\n\n\n\n\n\nsector_main\nmean_wage\n\n\n\n\nService public des collectivités territoriales\n60000\n\n\nBEP, CAP, Services aux Personnes, Particuliers\n52500\n\n\nAgriculture, Pêche\n49091\n\n\nIndustrie high-tech, Telecom, Média, Internet, Communication\n48000\n\n\nBTP, Secteur Energie, Environnement\n45000\n\n\n\n\n\n\n\nTop 5 des départements par salaire moyen\n\naddr = data_emp %&gt;% group_by(addr_dept_main)  %&gt;%  summarize(mean_wage = mean(avg_wage, na.rm = TRUE))  %&gt;%  arrange(desc(mean_wage))  %&gt;%  slice_head(n = 5)\n\nkable(addr, caption = \"Top 5 des départements par salaire moyen\", format=\"markdown\")\n\n\nTop 5 des départements par salaire moyen\n\n\naddr_dept_main\nmean_wage\n\n\n\n\n45\n55000.00\n\n\n78\n53333.33\n\n\n38\n50000.00\n\n\n75\n48102.68\n\n\n56\n45000.00"
  },
  {
    "objectID": "Analyse des données.html",
    "href": "Analyse des données.html",
    "title": "Analyse des données",
    "section": "",
    "text": "#installer packages\n#install.packages('ggplot2')\n#install.packages('dplyr')\n#install.packages('tidyr')\n#install.packages('ggwordcloud')\n#install.packages('readr')\n#install.packages('sf')\n\n#charger packages : \nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggwordcloud)\nlibrary(readr)\nlibrary(sf)\n\n#charger les données : \ndata &lt;- read_csv(\"base_emp_inno.csv\")\n###Lien entre les dépôts de brevet et l’experience requise\n# Filtrer les données pour exclure les NA\ndata_clean &lt;- data %&gt;%\n  filter(!is.na(avg_req_exp) & !is.na(n_patents))\n\n# Identifier les valeurs aberrantes (valeurs très élevées) dans le boxplot\noutliers &lt;- data_clean %&gt;%\n  filter(n_patents &gt; quantile(n_patents, 0.75) + 1.5 * IQR(n_patents)) # Critère classique pour un outlier\n\n# Créer le boxplot avec annotation des outliers\nggplot(data_clean, aes(x = factor(avg_req_exp), y = n_patents)) +\n  geom_boxplot(fill = \"orange\") +\n  geom_point(data = outliers, aes(x = factor(avg_req_exp), y = n_patents), color = \"red\", size = 3) +\n  geom_text(data = outliers, aes(x = factor(avg_req_exp), y = n_patents, label = firm_name), \n            vjust = -0.5, hjust = 0.5, size = 3, color = \"red\") +\n  labs(\n    title = \"Dépôts de brevets vs Expérience requise moyenne\",\n    x = \"Expérience requise moyenne (en années)\",\n    y = \"Nombre de brevets déposés\"\n  ) +\n  theme_minimal()\nLe graphique montre que la majorité des entreprises innovantes (en termes de brevets déposés) proposent des postes avec peu ou pas d’expérience requise. Une entreprise dominante (Orange) apparaît comme une valeur aberrante, avec un très grand nombre de brevets et des offres sans exigence d’expérience. En revanche, les entreprises demandant 2 à 4 ans d’expérience n’affichent pas un niveau significatif d’innovation.\n# Nettoyer les données : filtrer les valeurs manquantes\ndata_cleaned &lt;- data %&gt;%\n  filter(!is.na(n_patents), !is.na(avg_req_exp)) %&gt;%\n  mutate(\n    n_patents = as.numeric(n_patents),\n    avg_req_exp = as.numeric(avg_req_exp)\n  )\n\n# Créer un nuage de points\nggplot(data_cleaned, aes(x = avg_req_exp, y = n_patents)) +\n  geom_point(alpha = 0.6, color = \"steelblue\") +\n  geom_smooth(method = \"lm\", color = \"red\", se = TRUE) +\n  theme_minimal() +\n  labs(\n    title = \"Relation entre le nombre de brevets et l'expérience requise moyenne\",\n    x = \"Expérience requise moyenne (en années)\",\n    y = \"Nombre total de brevets\",\n    caption = \"Source : Données internes\"\n  ) +\n  theme(\n    axis.title = element_text(size = 12),\n    axis.text = element_text(size = 10)\n  )\nOn voit ici qu’il n’existe pas de lien significatif entre le nombre de brevets déposés et l’expérience requise moyenne des employés. La dispersion des points et la régression plate indiquent que l’expérience demandée n’influence pas directement le niveau d’innovation, avec une majorité des offres exigeant moins de 4 ans d’expérience.\n###Répartition des brevets sur le territoire français\n# Nettoyer les données et filtrer les colonnes nécessaires\ndata_cleaned &lt;- data %&gt;%\n  select(addr_dept_main.x, n_patents) %&gt;%\n  filter(!is.na(addr_dept_main.x), !is.na(n_patents)) %&gt;%\n  mutate(\n    addr_dept_main.x = as.character(addr_dept_main.x),\n    n_patents = as.numeric(n_patents)\n  )\n\n# Agréger le nombre de brevets par département\ndata_summary &lt;- data_cleaned %&gt;%\n  group_by(addr_dept_main.x) %&gt;%\n  summarise(total_patents = sum(n_patents, na.rm = TRUE))\n\n# Importer les contours des départements français\nfrance_departments &lt;- st_read(\"https://github.com/gregoiredavid/france-geojson/raw/master/departements-version-simplifiee.geojson\")\n\nReading layer `departements-version-simplifiee' from data source \n  `https://github.com/gregoiredavid/france-geojson/raw/master/departements-version-simplifiee.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 96 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -5.103601 ymin: 41.36705 xmax: 9.559721 ymax: 51.0884\nGeodetic CRS:  WGS 84\n\n# Associer les données des brevets aux données géographiques\nfrance_map &lt;- france_departments %&gt;%\n  left_join(data_summary, by = c(\"code\" = \"addr_dept_main.x\"))\n\n# Créer une carte\nggplot(data = france_map) +\n  geom_sf(aes(fill = total_patents), color = \"white\") +\n  scale_fill_gradient(low = \"lightblue\", high = \"darkblue\", na.value = \"grey90\", name = \"Nombre de brevets\") +\n  theme_minimal() +\n  labs(\n    title = \"Concentration des brevets par département en France\",\n    subtitle = \"Basé sur les données fournies\",\n    caption = \"Source : Données internes\"\n  ) +\n  theme(\n    legend.position = \"right\",\n    axis.text = element_blank(),\n    axis.ticks = element_blank()\n  )\nLa carte montre une distribution inégale des brevets en France. Quelques départements, représentés en bleu foncé, concentrent la majorité des brevets, notamment dans des régions comme la Nouvelle-Aquitaine et certains départements centraux. Cela reflète probablement la présence de pôles technologiques, d’entreprises innovantes ou de centres de recherche et développement.\nÀ l’inverse, la majorité des départements en bleu clair ou en gris présentent une activité d’innovation plus faible, ce qui peut être lié à des facteurs économiques, une moindre densité industrielle ou une absence d’infrastructures R&D.\nCette carte met en évidence des disparités régionales en matière d’innovation, soulignant l’importance des écosystèmes locaux pour favoriser la production de brevets.\n###Quels sont les codes IPC les plus présents?\ndata_cleaned &lt;- data %&gt;%\n  select(ipc_main_code, n_patents) %&gt;%\n  filter(!is.na(ipc_main_code), !is.na(n_patents)) %&gt;%\n  group_by(ipc_main_code) %&gt;%\n  summarise(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents))\n\n# Limiter aux 20 codes IPC principaux les plus représentés\ntop_ipc &lt;- data_cleaned %&gt;%\n  top_n(20, total_patents)\n\n# Créer un graphique horizontal pour les 20 codes IPC principaux\nggplot(top_ipc, aes(x = reorder(ipc_main_code, total_patents), y = total_patents)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  coord_flip() + # Inverser les axes pour un graphique horizontal\n  theme_minimal() +\n  labs(\n    title = \"Top 20 des codes IPC principaux par nombre de brevets\",\n    x = \"Code IPC principal\",\n    y = \"Nombre total de brevets\",\n    caption = \"Source : Données internes\"\n  ) +\n  theme(\n    axis.text.y = element_text(size = 10),\n    axis.title = element_text(size = 12)\n  )\nLe graphique montre les 20 codes IPC principaux les plus représentés en termes de nombre de brevets. On observe que le code A61K, lié aux préparations médicales ou pharmaceutiques, domine largement avec un nombre de brevets beaucoup plus élevé que les autres catégories. Cela indique une forte activité d’innovation dans le secteur pharmaceutique et de la santé.\nLes codes suivants, H01L (dispositifs semi-conducteurs) et H04W (réseaux de télécommunications sans fil), montrent également une activité significative, soulignant l’importance des secteurs de l’électronique et des télécommunications dans l’innovation.\nEnfin, les autres codes IPC, comme C07C (composés organiques), B60C (pneus) et G01S (systèmes de radar), indiquent une diversité des domaines technologiques, avec une présence notable dans la chimie, l’automobile et les systèmes de détection.\nEn conclusion, le graphique révèle que les secteurs pharmaceutique, électronique et télécommunications sont des moteurs majeurs de l’innovation en matière de brevets, avec une concentration élevée sur certains codes spécifiques."
  },
  {
    "objectID": "Analyse des données.html#quels-sont-les-compétences-les-plus-présentes",
    "href": "Analyse des données.html#quels-sont-les-compétences-les-plus-présentes",
    "title": "Analyse des données",
    "section": "Quels sont les compétences les plus présentes",
    "text": "Quels sont les compétences les plus présentes\n###pour les salaires les plus élevés\n\n# Nettoyer les données : séparer les compétences multiples et agréger par salaire moyen\nskill_salary &lt;- data %&gt;%\n  filter(!is.na(top_skill_req), !is.na(avg_wage)) %&gt;%\n  separate_rows(top_skill_req, sep = \",\\\\s*\") %&gt;% # Séparer les compétences multiples\n  group_by(top_skill_req) %&gt;%\n  summarise(avg_wage = mean(avg_wage, na.rm = TRUE)) %&gt;%\n  arrange(desc(avg_wage)) %&gt;%\n  top_n(30, avg_wage)  # Limiter aux 30 compétences les mieux rémunérées\n\n# Créer un Word Cloud avec ajustements\nggplot(skill_salary, aes(label = top_skill_req, size = avg_wage)) +\n  geom_text_wordcloud(\n    color = \"steelblue\",\n    fontface = \"bold\",\n    shape = \"square\",\n    area_corr = TRUE, # Ajuste l'espace occupé par les mots\n    max_steps = 1000  # Augmente les itérations pour un meilleur placement\n  ) +\n  scale_size_area(max_size = 10) +  # Taille maximale ajustée pour éviter les débordements\n  theme_minimal() +\n  labs(\n    title = \"Word Cloud des compétences pondérées par le salaire moyen\",\n    caption = \"Source : Données internes\"\n  ) +\n  theme(plot.title = element_text(size = 16, face = \"bold\"))\n\n\n\n\n\n\n\n\nLe Word Cloud montre que les compétences techniques comme C++, Git, NLP, AWS, et Spark sont celles associées aux salaires les plus élevés dans les entreprises innovantes. Cela reflète l’importance des domaines liés à la programmation, au cloud computing et à l’intelligence artificielle. Par ailleurs, des compétences en visualisation de données (Tableau, Power BI) et en analyse restent également valorisées. Enfin, des compétences transversales comme la résolution de problèmes et la communication apparaissent, bien que moins liées aux rémunérations élevées.\n\npour le dépôt de brevet\n\n# Nettoyer les données : séparer les compétences multiples et agréger par le nombre de brevets\nskill_patents &lt;- data %&gt;%\n  filter(!is.na(top_skill_req), !is.na(n_patents)) %&gt;%\n  separate_rows(top_skill_req, sep = \",\\\\s*\") %&gt;% # Séparer les compétences multiples\n  group_by(top_skill_req) %&gt;%\n  summarise(total_patents = sum(n_patents, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_patents)) %&gt;%\n  top_n(30, total_patents)  # Limiter aux 30 compétences les plus liées aux brevets\n\n# Créer un Word Cloud pondéré par le nombre de brevets\nggplot(skill_patents, aes(label = top_skill_req, size = total_patents)) +\n  geom_text_wordcloud(\n    color = \"steelblue\",\n    fontface = \"bold\",\n    shape = \"square\",\n    area_corr = TRUE, # Ajuste l'espace occupé par les mots\n    max_steps = 1000  # Améliore le placement des mots\n  ) +\n  scale_size_area(max_size = 15) +  # Taille maximale ajustée\n  theme_minimal() +\n  labs(\n    title = \"Word Cloud des compétences pondérées par le nombre de brevets\",\n    caption = \"Source : Données internes\"\n  ) +\n  theme(plot.title = element_text(size = 16, face = \"bold\"))\n\n\n\n\n\n\n\n\nLe Word Cloud met en évidence les compétences les plus fréquemment associées à un grand nombre de brevets. Les compétences comme Git, SQL, Excel, Spark et Python dominent, soulignant leur importance dans les entreprises innovantes. Ces compétences, principalement techniques, sont essentielles pour le développement logiciel, la gestion de bases de données et le traitement des données massives.\nD’autres compétences telles que Tableau, AWS, et Azure montrent également un lien fort avec l’innovation, notamment dans les domaines du cloud computing et de la visualisation des données. Enfin, des compétences transversales comme le travail en équipe (“équipe”) et la collaboration apparaissent aussi, soulignant leur rôle dans la réussite des projets innovants.\nEn conséquence, les compétences les plus liées à l’innovation sont fortement orientées vers la technologie des données (SQL, Spark, Python) et les outils de collaboration et de développement (Git, Excel), tout en intégrant des compétences interpersonnelles comme le travail d’équipe.\nDe plus,l’analyse liée aux salaires moyens est complexe étant donnée le grand nombre de données manquantes (NA) dans la base et risque de ne pas etre significative. nous avons donc décider de ne pas se pencher plus sur cet aspect malgré son importance dans le sujet.\n##CONCLUSION Cette analyse met en lumière les dynamiques entre innovation et divers facteurs liés aux entreprises. Les compétences techniques comme Git, SQL, Python, et Spark apparaissent fortement liées à l’innovation, reflétant l’importance du développement logiciel et de la gestion des données dans les secteurs innovants. Cependant, des compétences transversales telles que le travail en équipe et la communication jouent également un rôle clé.\nL’étude révèle par ailleurs que l’expérience requise moyenne n’a pas d’impact significatif sur le nombre de brevets déposés, indiquant que l’innovation n’est pas nécessairement liée à des niveaux élevés d’expérience professionnelle.\nEnfin, les secteurs comme l’industrie high-tech, la pharmaceutique et l’aéronautique se distinguent par une forte concentration de brevets, bien que le lien entre innovation et offres d’emploi varie selon les secteurs.\nEn conclusion, l’innovation repose principalement sur des compétences techniques spécialisées et une dynamique collaborative, tandis que son impact sur l’emploi et les exigences professionnelles diffère selon les contextes sectoriels."
  }
]